'use strict';
function fastbootExpressMiddleware(distPath, options) {
    var FastBoot = require('fastboot');
    var opts = options;
    if (arguments.length === 1) {
        if (typeof distPath === 'string') {
            opts = { distPath: distPath };
        }
        else {
            opts = distPath;
        }
    }
    opts = opts || {};
    var log = opts.log !== false ? _log : function () { };
    var fastboot = opts.fastboot;
    if (!fastboot) {
        fastboot = new FastBoot({
            distPath: opts.distPath,
            resilient: opts.resilient
        });
    }
    return function (req, res, next) {
        var path = req.url;
        fastboot.visit(path, { request: req, response: res })
            .then(success, failure);
        function success(result) {
            result.html()
                .then(function (html) {
                var headers = result.headers;
                for (var _i = 0, _a = headers.entries(); _i < _a.length; _i++) {
                    var pair = _a[_i];
                    res.set(pair[0], pair[1]);
                }
                log(result.statusCode, 'OK ' + path);
                res.status(result.statusCode);
                res.send(html);
            })
                .catch(function (error) {
                console.log(error.stack);
                res.sendStatus(500);
            });
        }
        function failure(error) {
            if (error.name === "UnrecognizedURLError") {
                next();
            }
            else {
                log(500, "Unknown Error: " + error.stack);
                if (error.stack) {
                    res.status(500).send(error.stack);
                }
                else {
                    res.sendStatus(500);
                }
            }
        }
    };
}
var chalk;
function _log(statusCode, message, startTime) {
    chalk = chalk || require('chalk');
    var color = statusCode === 200 ? 'green' : 'red';
    var now = new Date();
    if (startTime) {
        var diff = Date.now() - startTime;
        message = message + chalk.blue(" " + diff + "ms");
    }
    console.log(chalk.blue(now.toISOString()) + " " + chalk[color](statusCode) + " " + message);
}
module.exports = fastbootExpressMiddleware;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFHYixtQ0FBbUMsUUFBUSxFQUFFLE9BQU87SUFDbEQsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRXJDLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQztJQUVuQixFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0IsRUFBRSxDQUFDLENBQUMsT0FBTyxRQUFRLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNqQyxJQUFJLEdBQUcsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUM7UUFDaEMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxHQUFHLFFBQVEsQ0FBQztRQUNsQixDQUFDO0lBQ0gsQ0FBQztJQUVELElBQUksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0lBRWxCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEtBQUssS0FBSyxHQUFHLElBQUksR0FBRyxjQUFZLENBQUMsQ0FBQztJQUVwRCxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBRTdCLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUNkLFFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQztZQUN0QixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO1NBQzFCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxNQUFNLENBQUMsVUFBUyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUk7UUFDNUIsSUFBSSxJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQztRQUNuQixRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxFQUFFLE9BQU8s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